											STRING
-> String constant pool present in method area or meta space it doesn't have Garbage collection
-> Garbage collection works only on Heap segment

->2 ways to create String
	1.using string literal
		ex :- String name = "Abhisekh";
		-> it is created in String constant pool(SCP) 
		-> before creating any object with same String or content exit in SCP then JVM wont create it that old reference will give to this variable
		-> using literal when ever want to change/modify the object then it will create a new object
		
		methods:
			1. .concat("");
			will concatinaate string and create a new object in Heap not in SCP
			 ex :-> String s1 = "Kodwala";
			 		s1 = s1.concat("Academy"); -> here s1 will refer to a new object
	2.using new keyword
		ex :- String name = new String("Abhisekh");	
		-> it is created inside HEAP 	
		-> when ever using new keyword JVM will always create new object if the content is exits also
		-> When ever object reference got detached then GC will remove it from Heap.
		-> when ever any object created in HEAP then that objects one copy will save in SCP 
		
		
intern():-
	String s1 = "Bangalore";
	String s3 = new String("Bangalore");
	s3 = s3.intern(); // it will refer to same string in string constant pool
	Syso(s1 == s3); -> o/p :- true
	
.split(""):-
	-> differentiate the words using split() method giving required argument.
		ex :- String str ="I am from Bangalore karnataka";
			  String arr[] = str.split(" "); -> if space will come then till space what word got place in a index.like this we can separate like #,$,%
	
"+" operator:-
	-> it internally uses string buffer and builder
	
	
	
	
	
	
	